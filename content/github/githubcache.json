{"lastfetched":1707161836863,"repos":[{"name":"ao3-toolkit","description":"A Toolkit for interfacing with the Archive of Our Own","readme":"# ao3-toolkit\n\nA Toolkit for interfacing with the Archive of Our Own\n\n## Installation\n\nao3-toolkit runs on Node.js and is available as a [NPM package](https://www.npmjs.com/package/ao3-toolkit).\n\n```text\nnpm install ao3-toolkit\n```\n\n## Usage\n\n> [!IMPORTANT]\n> In a [blog post](https://archiveofourown.org/admin_posts/25888?show_comments=true) the admins talk about how they handle data scraping:\n> \"We've put in place certain technical measures to hinder large-scale data scraping on AO3, such as rate limiting, and we're constantly monitoring our traffic for signs of abusive data collection. We do not make exceptions for researchers or those wishing to create datasets. However, we don't have a policy against responsible data collection — such as those done by academic researchers, fans backing up works to Wayback Machine or Google's search indexing. Putting systems in place that attempt to block all scraping would be difficult or impossible without also blocking legitimate uses of the site.\"\n\n### Logging in to ao3\n\n```ts\nimport { LoginSession } from \"ao3-toolkit\";\n\nconst session = await new LoginSession({\n  username: string,\n  password: string,\n}).login();\n```\n\n### Fetching single works\n\n```ts\nimport { getWorkInfo } from \"ao3-toolkit\";\n\nconst work = await getWorkInfo(id: number)\n```\n\n#### Fetching work content\n\n```ts\nimport { getWorkContent } from \"ao3-toolkit\";\n\nconst work = await getWorkContent(id: number)\n```\n\n#### Fetching work stats\n\n```ts\nimport { getWorkStats } from \"ao3-toolkit\";\n\nconst work = await getWorkStats(id: number)\n```\n\n### Fetching user history\n\n```ts\nimport { LoginSession, getWorkList } from \"ao3-toolkit\";\n\nconst session = await new LoginSession({\n  username: string,\n  password: string,\n}).login();\n\nconst history = await getWorkList(\n  logindata,\n  session.instance,\n  Listtype.History\n);\n```\n\n### Fetching user bookmarks\n\n```ts\nimport { LoginSession, getWorkList } from \"ao3-toolkit\";\n\nconst session = await new LoginSession({\n  username: string,\n  password: string,\n}).login();\n\nconst history = await getWorkList(\n  logindata,\n  session.instance,\n  Listtype.Bookmark\n);\n```\n\n## Roadmap\n\n- Fetching work comments\n- Fetching user stats\n  - favourite tags\n  - favourite fandoms\n- Fetching user stats\n  - words read\n  - fics read\n\n## Documentation\n\n[Documentation](https://lucaengelhard.github.io/ao3-toolkit/) is generated with [TypeDoc](https://typedoc.org/)\n\n## Contributing\n\nThis project is written by a lone developer who learns as they go. Contributions are welcome and appreciated. So clone the repository, make a Pull request and add a [Changeset](https://github.com/changesets/changesets). If you have any feedback, please open an Issue or reach out to me at me@lucaengelhard.com.\n\n## Inspiration and similar Projects:\n\nhttps://github.com/cyrusae/AO3.js  \nhttps://github.com/misaalanshori/ao3webapi  \nhttps://github.com/timing1337/ao3_ts  \nhttps://github.com/ReyhanArdiya/stories-scrapper  \nhttps://github.com/dr-off/ao3-api  \nhttps://github.com/Dramatycznie/AO3_Scraper  \nhttps://github.com/rsanjabi/narratives  \nhttps://github.com/syrtis-m/ao3-bookmark-getter  \nhttps://github.com/niacdoial/AO3-stylish-downloader  \nhttps://github.com/gmastergreatee/Fanfiction-Manager\n\n## License\n\n[MIT](https://github.com/lucaengelhard/ao3-toolkit/blob/main/LICENSE)\n"},{"name":"counter-strike-settings","description":null,"readme":""},{"name":"digitale-karten","description":null,"readme":"# Studienprojekt für das Fach Digitale Karten\n\nAufgabe war es, eine Kartendatengestützte Datenvisualisierung mit hilfe des Tools MapBox zu entwickeln.\n\n## Idee\n\nDie Visualisierung zeigt eine Karte von Deutschland, aufgeteilt in die verschiedenen Postleitzahlbereiche. Die Farbcodierung trennt Deutschland in Bereiche von 00000 bis 09999, 10000 bis 19999 usw. ein. Die Extrusionen aus jedem PLZ-Bereich in die dritte Dimension visualisieren die Menge an Einwohner\\*innen pro Postleitzahl.\n\n## Umsetzung\n\n### Datensammlung\n\nDer Datensatz wurde kombiniert aus einem GeoJSON-Datensatz der PLZ-Daten an Koordinaten bindet und einem CSV-Datensatz der Einwohner\\*innenzahlen an PLZs bindet.\nDie Daten wurden mit QGIS verarbeitet und mit Mapshaper verkleinert, damit MapBox die Daten verarbeiten konnte.\n\nIn einer früheren Version des Projekts waren noch Informationen über die Höhe über N.N. der jeweiligen PLZ angedacht, dafür wurde ein Skript geschrieben, um die Daten aus Wikipedia auszulesen. Die Daten befinden sich auch im Datensatz, werden aber jetzt nicht mehr verwendet.\n\n### Coding\n\nUmgesetzt wurde die Karte mit MapBox Studio und MapBox GL JS. In Studio wurden die Datensätze hochgeladen und in Ebenen verarbeitet, mit JavaScript wurde dann Interaktivität eingebaut.\n\nDie Anwendung bietet die Möglichkeit, entweder direkt mit der Karte zu interagieren und dann auf der Sidebar rechts detailliertere Informationen zur jeweiligen angeklickten PLZ zu erhalten oder anstattdessen im Suchfeld zu suchen und dann auszuwählen.\n\nAußerdem lassen sich die groben Bereiche filtern und alleine Darstellen lassen.\n"},{"name":"notion-todo","description":null,"readme":""},{"name":"portfolio","description":"Personal Portfolio Website","readme":"# My Portfolio Website, developed with NuxtJS"}]}